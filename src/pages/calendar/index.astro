---
import Layout from "~/layouts/Layout.astro";
// export const weekDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
---

<style lang="scss" is:global>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 1500px;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }

  .calendar,
  .calendar-heading {
    display: grid;
    grid-template-columns: 40px 1fr;
  }

  .calendar {
    max-height: 80vh;
    overflow: auto;
  }

  .calendar-heading {
    .calendar-week-head {
      border: 1px solid rgba(128, 128, 128, 0.139);
      padding: 0.5rem;
    }

    .calendar-current-day {
      // background-color: crimson;
      // color: white;
      .calendar-week-head {
        color: crimson;
      }
    }
  }

  .calendar-week {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    border: 1px solid rgba(128, 128, 128, 0.139);
    position: relative;
  }

  .day-timelist {
    align-self: flex-end;
  }

  // .calendar-week-header {
  //   display: flex;
  //   align-items: center;
  //   justify-content: center;
  // }

  .calendar-day {
    align-items: center;
    justify-content: center;
    // border: 1px solid rgba(128, 128, 128, 0.139);
    // border-radius: 900px;

    // &:not([data-currentMonth="true"]) {
    //   opacity: 0.25;
    // }
  }

  .day {
    &-num {
      font-size: larger;
    }
    &-hour-span {
      height: 80px;
    }

    &-hour-slot {
      flex: 1;
      border-bottom: 1px dashed;
      border-right: 1px solid;
      border-color: rgba(128, 128, 128, 0.139);
      transition: all 0.1s linear;

      &:hover {
        background-color: rgba(0, 0, 0, 0.139);
      }
    }
  }

  .day-wrapper {
    position: relative;
    z-index: 0;
  }
  .day-event-list {
    position: absolute;
    inset: 0;
    width: 90%;
    height: 100%;
    // z-index: -1;
    pointer-events: none;
    overflow: hidden;
  }
  .day-event {
    position: absolute;
    // background-color: cadetblue;
    color: white;
    border-radius: 3px;
    padding: 0.5rem;
    min-height: 40px;
    left: 0;
    // right: 0;
    // width: 100%;
    pointer-events: all;
    overflow: hidden;
  }

  .time-indicator {
    --mainWidth: 0;

    position: absolute;
    height: 2px;
    width: 100%;
    // background-color: orangered;
    background-image: linear-gradient(
      90deg,
      orangered,
      orangered 75%,
      transparent 75%,
      transparent 100%
    );
    background-size: 18px 20px;
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    overflow: hidden;

    &::after {
      position: absolute;
      right: 0;
      content: "";
      height: 100%;

      background-color: orangered;

      width: var(--mainWidth);
    }
  }
</style>

<Layout title="Calendar + Scheduler">
  <main>
    <!-- <div class="calendar-days" style="padding-bottom: 0.5rem;">
      {weekDays.map((day) => <div class="calendar-week-header">{day}</div>)}
    </div> -->

    <div id="calendar">
      <div class="calendar-toolbar">
        <div>
          <button id="prev-btn">Previous Week</button>
          <button id="next-btn">Next Week</button>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { Calendar } from "~/app/calendar/calendar";

  const calendarContainer = document.querySelector<HTMLElement>("#calendar")!;

  const ad = new Calendar(calendarContainer);

  // test to add event
  // setTimeout(() => {
  //   ad.addEvent({
  //     startDate: new Date(2023, 4, 10, 8, 0),
  //     endDate: new Date(2023, 4, 10, 10, 0),
  //     name: "New Event",
  //   });
  // }, 5000);

  const nextBtn = document.querySelector<HTMLButtonElement>("#next-btn");
  const prevBtn = document.querySelector<HTMLButtonElement>("#prev-btn");

  nextBtn?.addEventListener("click", () => {
    ad.nextWeek();
  });
  prevBtn?.addEventListener("click", () => {
    ad.prevWeek();
  });
</script>
